/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.connect4.java.ui;

import com.connect4.java.CellStatus;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author Aaron
 */
public class Connect4JFrame extends javax.swing.JFrame {

    /**
     * Creates new form Connect4JFrame
     */
    public Connect4JFrame() {
        initComponents();
        connect4Board1.setVisible(false);
    }
    
    private boolean pcPlayer;
    
    public boolean isPcPlayer(){
        return pcPlayer;
    }
    
    public boolean turn(boolean redTurn){  
        //Evaluate winner
        CellStatus winner = connect4Board1.getWinner();
        
        if(winner!=null){
            if(winner==CellStatus.REDIN){
                statusBar.setText("Red Player is the Winner!");
                if(JOptionPane.showConfirmDialog(this, "Do you want to play again?", "RED PLAYER WON!", JOptionPane.OK_OPTION)==JOptionPane.NO_OPTION){
                    this.setVisible(false);
                    this.dispose();
                }
                connect4Board1.reset();
                play(false,pcPlayer);
                return true;
            }
            else{
                statusBar.setText("Purple Player is the Winner!");
                if(JOptionPane.showConfirmDialog(this, "Do you want to play again?", "PURPLE PLAYER WON!", JOptionPane.OK_OPTION)==JOptionPane.NO_OPTION){
                    this.setVisible(false);
                    this.dispose();                    
                }
                connect4Board1.reset();
                play(true,pcPlayer);
                return true;
            }
        }
        
        //Evaluate available options
        if(!connect4Board1.isAnyOptionAvailable()){
            statusBar.setText("We have a TIE! Play again");
            return false;
        }
        
        if(redTurn){
            statusBar.setText("Red Turn");
            if(pcPlayer){
                connect4Board1.setPCTurn(false);
            }
            connect4Board1.setTurn(true);            
        } else{
            statusBar.setText("Purple Turn");
            if(pcPlayer){
                statusBar.setText("Purple Turn (PC)");
                connect4Board1.setPCTurn(true);
            }
            connect4Board1.setTurn(false);   
        }                     
        return true;
    }
    
    public void play(boolean redTurn, boolean pcPlayer){
        if(!turn(redTurn)){
            this.statusBar.setText("DONE");            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        connect4Board1 = new Connect4Board(this);
        statusBar = new javax.swing.JLabel();
        mainMenu = new javax.swing.JMenuBar();
        gameMenu = new javax.swing.JMenu();
        newGame2Player = new javax.swing.JMenuItem();
        newGame1Player = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        statusBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusBar.setText("Select the amount of players");
        statusBar.setAlignmentX(0.5F);
        statusBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addComponent(connect4Board1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(351, Short.MAX_VALUE)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addComponent(connect4Board1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 33, Short.MAX_VALUE)))
        );

        gameMenu.setMnemonic('G');
        gameMenu.setText("Game");
        gameMenu.setToolTipText("");

        newGame2Player.setMnemonic('2');
        newGame2Player.setText("New 2 player");
        newGame2Player.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGame2PlayerActionPerformed(evt);
            }
        });
        gameMenu.add(newGame2Player);

        newGame1Player.setMnemonic('1');
        newGame1Player.setText("New 1 player");
        newGame1Player.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGame1PlayerActionPerformed(evt);
            }
        });
        gameMenu.add(newGame1Player);
        gameMenu.add(jSeparator1);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(exitMenuItem);

        mainMenu.add(gameMenu);

        aboutMenu.setMnemonic('A');
        aboutMenu.setText("About");
        aboutMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                aboutMenuMenuSelected(evt);
            }
        });
        mainMenu.add(aboutMenu);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGame2PlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGame2PlayerActionPerformed
        // TODO add your handling code here:
        int startNewGame=0;
        if(connect4Board1.isVisible()){
            startNewGame=JOptionPane.showConfirmDialog(this, "There is a game in progress. Are you sure you want to start a new one?", "New 2 Player Game", JOptionPane.YES_NO_OPTION);
            if(startNewGame==JOptionPane.YES_OPTION){
                connect4Board1.reset();
            } else {
                return;
            }            
        }
        this.statusBar.setText("Two Players Game");
        connect4Board1.setVisible(true);
        pcPlayer=false;
        play(true,false);
    }//GEN-LAST:event_newGame2PlayerActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void aboutMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_aboutMenuMenuSelected
        // TODO add your handling code here:
        JDialog aboutDialog = new JDialog(this, "About Connect 4", true);
                JTextArea aboutText = new JTextArea("Java Again!\n\nGame of Connect 4\nCoded by:\natorrescano@gmail.com\nguadalupe.chilton@gmail.com");
                aboutDialog.add(aboutText);
                aboutDialog.pack();
                aboutDialog.setLocationRelativeTo(this);
                aboutDialog.setVisible(true);
    }//GEN-LAST:event_aboutMenuMenuSelected

    private void newGame1PlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGame1PlayerActionPerformed
        // TODO add your handling code here:
        int startNewGame=0;
        if(connect4Board1.isVisible()){
            startNewGame=JOptionPane.showConfirmDialog(this, "There is a game in progress. Are you sure you want to start a new one?", "New 1 Player Game", JOptionPane.YES_NO_OPTION);
            if(startNewGame==JOptionPane.YES_OPTION){
                connect4Board1.reset();
            } else {
                return;
            }            
        }
        this.statusBar.setText("One Player Game");
        connect4Board1.setVisible(true);
        pcPlayer=true;
        play(true,true);
    }//GEN-LAST:event_newGame1PlayerActionPerformed

    public void setMessage(String message){
        this.statusBar.setText(message);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connect4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connect4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connect4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connect4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connect4JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private com.connect4.java.ui.Connect4Board connect4Board1;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem newGame1Player;
    private javax.swing.JMenuItem newGame2Player;
    private javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables
}
